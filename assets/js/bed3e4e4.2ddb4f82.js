"use strict";(self.webpackChunkdartway_dev=self.webpackChunkdartway_dev||[]).push([[255],{8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(6540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},9127:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"quickstart","title":"Quickstart","description":"\ud83d\ude80 Setting up your first Dart Way App","source":"@site/docs/02_quickstart.md","sourceDirName":".","slug":"/quickstart","permalink":"/docs/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Welcome to Dart Way","permalink":"/docs/intro"}}');var i=r(4848),s=r(8453);const o={},a="Quickstart",l={},d=[{value:"\ud83d\ude80 Setting up your first Dart Way App",id:"-setting-up-your-first-dart-way-app",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"quickstart",children:"Quickstart"})}),"\n",(0,i.jsx)(t.h2,{id:"-setting-up-your-first-dart-way-app",children:"\ud83d\ude80 Setting up your first Dart Way App"}),"\n",(0,i.jsx)(t.p,{children:"Our main goal is to handle all technical issues so that you only need to worry about the real logic and UI.\r\nSimplest version looks like this."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"  DwApp(\r\n    title: 'Your Dart Way App',\r\n    routerProvider: appRouterProvider,\r\n    dwConfig: DwConfig(\r\n      defaultModelGetter: DwRepository.getDefault,\r\n    ),\r\n    flutterAppOptions: DwFlutterAppOptions(\r\n      theme: appLightTheme,\r\n    ),\r\n    appInitializers: [\r\n      (_) async {\r\n        AppCore.initServerpodClient(\r\n          await dotenv.load().then((_) => dotenv.get('BACKEND_URL')),\r\n        );\r\n        return true;\r\n      },\r\n      (ref) => ref.initDartwayServerpodApp<UserProfile>(\r\n            client: AppCore.serverpodClient,\r\n            initRepositoryFunction: DefaultModels.initRepository,\r\n            userIdMode: UserIdMode.userProfileId,\r\n          ),\r\n    ],\r\n  ).run();\n"})}),"\n",(0,i.jsx)(t.p,{children:"All DartWay classes start with Dw which helps you to find needed classes fast."}),"\n",(0,i.jsx)(t.p,{children:"The example above looks a bit complicated but here is what it covers for you:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"MaterialApp.router initialization with appRouterProvider and auto rebuild for redirects"}),"\n",(0,i.jsx)(t.li,{children:"Native splash screen preserved untill all initializers are successfully finished"}),"\n",(0,i.jsx)(t.li,{children:"Carefully managed connection with Serverpod backend"}),"\n",(0,i.jsx)(t.li,{children:"User session management"}),"\n",(0,i.jsx)(t.li,{children:"Realtime sockets update"}),"\n",(0,i.jsx)(t.li,{children:"Default models and auto-skeleton for all your pages"}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);